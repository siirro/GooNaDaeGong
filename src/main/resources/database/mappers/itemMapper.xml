<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gndg.home.item.ItemDAO">

	<!-- 카테고리 불러오기 -->
	<select id="getCategory" resultType="Category">
		SELECT * FROM CATEGORY
		ORDER BY CATE_NUM ASC
	</select>

	<!-- 상품 총 개수 -->
	<select id="getTotal" parameterType="ItemDTO" resultType="Long">
		SELECT
		COUNT(*) as cnt
		FROM ITEM
		WHERE cate_num = #{cate_num}
	</select>

	<!-- 최신글 -->
	<select id="getNewItemList" parameterType="ItemDTO" resultMap="getNewItemListResult">
	SELECT * 
		FROM 
		    (SELECT ROWNUM RN, M.*
		    FROM
		        (SELECT I.ITEM_NUM,I.ITEM_TITLE,I.ITEM_PRICE,ITEM_DATE,F.FILENAME
		        FROM ITEM I
		            LEFT JOIN 
		            ITEMFILE F
		            ON I.ITEM_NUM = F.ITEM_NUM
		        ORDER BY ITEM_DATE DESC) M)
		WHERE RN BETWEEN 1 AND 8
	</select>
	<resultMap type="ItemDTO" id="getNewItemListResult">
		<id column="ITEM_NUM" property="item_num" />
		<result column="ITEM_TITLE" property="item_title" />
		<result column="ITEM_PRICE" property="item_price" />
		<result column="ITEM_DATE" property="item_date" />
		<collection property="itemFileDTOs" javaType="List" ofType="ItemFileDTO">
			<id column="FILENUM" property="fileNum" />
			<result column="ITEM_NUM" property="item_num" />
			<result column="FILENAME" property="fileName" />
		</collection>
	</resultMap>

	<!-- 인기글 -->
	<select id="getPopularItemList" parameterType="ItemDTO" resultMap="getPopularItemListResult">
	 SELECT * 
	 FROM
	    (SELECT ROWNUM RN,M.* 
	    FROM
	        (SELECT  NVL(K.C,0) COUNT,I.*,F.FILENAME
	                    FROM ITEM I
	                    LEFT JOIN
	                    ITEMFILE F
	                    ON I.ITEM_NUM = F.ITEM_NUM
	                    LEFT JOIN
	                    (SELECT COUNT(LIKE_NUM) C,ITEM_NUM
	                    FROM ITEMLIKE
	                    GROUP BY(ITEM_NUM)) K
	                    ON I.ITEM_NUM = K.ITEM_NUM
	                    ORDER BY COUNT DESC) M)           
	 WHERE RN BETWEEN 1 AND 8 AND COUNT >0
	</select>
	
	<resultMap type="ItemDTO" id="getPopularItemListResult">
		<id column="ITEM_NUM" property="item_num" />
		<result column="ITEM_TITLE" property="item_title" />
		<result column="ITEM_PRICE" property="item_price" />
		<collection property="itemLikeDTOs" javaType="List"
			ofType="ItemLikeDTO">
			<id column="LIKE_NUM" property="like_num" />
			<result column="ITEM_NUM" property="item_num" />
		</collection>
		<collection property="itemFileDTOs" javaType="List" ofType="ItemFileDTO">
			<id column="FILENUM" property="fileNum" />
			<result column="ITEM_NUM" property="item_num" />
			<result column="FILENAME" property="fileName" />
		</collection>
	</resultMap>
	
	<!-- 추천글 -->
	<select id="getRecommendItemList" parameterType="ItemDTO" resultMap="getRecommendItemListResult">
	SELECT *
	FROM
	(SELECT ROWNUM RN, M.*
	FROM
	    (SELECT ITEM_HIT,ITEM_TITLE,ITEM_CONTENTS,ITEM_PRICE,F.FILENAME
	     FROM 
	     ITEM I
	     LEFT JOIN
	     ITEMFILE F
	     ON I.ITEM_NUM = F.ITEM_NUM
	    ORDER BY ITEM_HIT DESC) M)
	WHERE RN BETWEEN 1 AND 8
	</select>

	<!-- 통합 검색 -->
	<select id="getSearch" parameterType="String" resultMap="getDetailResult">
		SELECT *
		FROM ITEM I
		LEFT JOIN
		ITEMFILE F
		ON I.ITEM_NUM = F.ITEM_NUM
		WHERE ITEM_TITLE LIKE '%'||#{search}||'%'
		ORDER BY ITEM_TITLE ASC
	</select>
	<resultMap type="ItemDTO" id="getRecommendItemListResult">
	<id column="ITEM_NUM" property="item_num"/>
	<result column="ITEM_HIT" property="item_hit"/>
	<result column="ITEM_TITLE" property="item_title"/>
	<result column="ITEM_CONTENTS" property="item_contents"/>
	<result column="ITEM_PRICE" property="item_price"/>
		<collection property="itemFileDTOs" javaType="List" ofType="ItemFileDTO">
			<id column="FILENUM" property="fileNum"/>
			<result column="ITEM_NUM" property="item_num"/>
			<result column="FILENAME" property="fileName"/>
		</collection>
	</resultMap>

	<!-- 최근 본 상품 -->
	<select id="getProduct" parameterType="ItemFileDTO" resultType="ItemFileDTO">
		SELECT ITEM_NUM, FILENAME
		FROM ITEMFILE
		WHERE ITEM_NUM = #{item_num}
		ORDER BY ITEM_NUM DESC
	</select>

	<!-- 상품 등록 -->
	<insert id="setAdd" parameterType="ItemDTO">
		<selectKey order="BEFORE" keyProperty="item_num" resultType="Long">
			SELECT ITEM_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ITEM
		VALUES(#{item_num}, #{user_id}, #{cate_num}, #{cate1}, #{cate2}, #{cate3}, #{cate4},
		#{item_title}, #{item_contents}, #{item_price}, #{item_stock}, 0, SYSDATE)
	</insert>

	<!-- 상품 이미지파일 추가 -->
	<insert id="setAddFile" parameterType="ItemFileDTO">
		INSERT INTO ITEMFILE VALUES(ITEMFILE_SEQ.NEXTVAL,#{item_num},#{fileName},#{oriName})
	</insert>

	<!-- 상품 리스트 불러오기 -->
   <select id="getList" parameterType="Map" resultMap="getListResult">
       select * from
      (SELECT ROWNUM R, II.*
         FROM
         (SELECT I.ITEM_NUM, I.ITEM_TITLE, I.ITEM_PRICE, I.ITEM_DATE, F.FILENAME, F.FILENUM
         FROM ITEM I
         LEFT JOIN
         ITEMFILE F
          ON I.ITEM_NUM = F.ITEM_NUM
          JOIN
           CATEGORY C
           ON I.CATE_NUM = C.CATE_NUM
              WHERE C.CATE_NUM  =  #{cate_num}
              AND FILENUM IN
              (
                    SELECT MIN(FILENUM)
                    FROM
                     (SELECT ROWNUM R, II.*
                     FROM
                     (SELECT ITEM_NUM, I.ITEM_TITLE, I.ITEM_PRICE, I.ITEM_DATE, F.FILENAME, F.FILENUM
                     FROM ITEM I
                     LEFT JOIN
                     ITEMFILE F
                      USING (ITEM_NUM)
                      JOIN
                       CATEGORY C
                       USING(CATE_NUM)
                        WHERE CATE_NUM  =  #{cate_num}
                     ORDER BY ITEM_NUM DESC, FILENUM ASC) II)
                    GROUP BY ITEM_NUM
              )
         ORDER BY ITEM_NUM DESC, FILENUM ASC) II)
         WHERE R BETWEEN #{startRow} AND #{lastRow}
   </select>
   
   <resultMap type="ItemDTO" id="getListResult">
      <id column="ITEM_NUM" property="item_num"/>
      <result column="ITEM_TITLE" property="item_title"/>
      <result column="CATE_NUM" property="cate_num"/>
      <result column="ITEM_PRICE" property="item_price"/>
      <result column="ITEM_DATE" property="item_date"/>
      <association property="category" javaType="Category">
         <id column=" CATE_NUM" property="cate_num"/>
         <result column="CATE_NAME" property="cate_name"/>
      </association>
      <collection property="itemFileDTOs" javaType="List" ofType="ItemFileDTO">
         <result column="FILENAME" property="fileName"/>
      </collection>
   </resultMap>
   
   <!--상품디테일-->
   <select id="getDetail" parameterType="ItemDTO" resultMap="getDetailResult">
      SELECT * 
      FROM ITEM I
      
      LEFT JOIN ITEMFILE F
      USING (ITEM_NUM)
      
      WHERE ITEM_NUM=#{item_num}
      ORDER BY FILENUM ASC
   </select>

   <resultMap type="ItemDTO" id="getDetailResult">
      <id column="ITEM_NUM" property="item_num"/>
      <result column="USER_ID" property="user_id"/>
      <result column="CATE_NUM" property="cate_num"/>
      <result column="CATE1" property="cate1"/>
      <result column="CATE2" property="cate2"/>
      <result column="CATE3" property="cate3"/>
      <result column="CATE4" property="cate4"/>
      <result column="ITEM_TITLE" property="item_title"/>
      <result column="ITEM_CONTENTS" property="item_contents"/>
      <result column="ITEM_COUNT" property="item_count"/>
      <result column="ITEM_PRICE" property="item_price"/>
      <result column="ITEM_DATE" property="item_date"/>
      <result column="ITEM_HIT" property="item_hit"/>
      <result column="ITEM_STOCK" property="item_stock"/>
      
      <collection property="itemFileDTOs" javaType="List" ofType="ItemFileDTO">
         <id column="FILENUM" property="fileNum"/> 
         <result column="FILENAME" property="fileName"/>
         <result column="ORINAME" property="oriName"/>
      </collection>
   </resultMap>
   
   <!-- 상품 수정 -->
   <update id="setUpdate" parameterType="ItemDTO">
      UPDATE ITEM SET 
      CATE1=#{cate1}, CATE2=#{cate2}, CATE3=#{cate3}, CATE4=#{cate4}, CATE_NUM=#{cate_num}, ITEM_TITLE=#{item_title}, ITEM_CONTENTS=#{item_contents}, ITEM_PRICE=#{item_price}, ITEM_STOCK=#{item_stock} 
      WHERE ITEM_NUM=#{item_num}
   </update>
   
   <!-- 상품 삭제 -->
   <delete id="setDelete" parameterType="ItemDTO">
      DELETE ITEM WHERE ITEM_NUM=#{item_num}
   </delete>
   
   <!-- 상품 수정할때 이미지파일 삭제 -->
   <select id="getFileDetail" parameterType="ItemFileDTO" resultType="ItemFileDTO">
      SELECT * FROM ITEMFILE WHERE FILENUM=#{fileNum}
   </select>
   <delete id="setFileDelete" parameterType="ItemFileDTO">
      DELETE ITEMFILE WHERE FILENUM=#{fileNum}
   </delete>
   

	<!-- 상품 리스트 개수 -->
	<select id="getListCount" parameterType="ItemDTO" resultType="Long">
		SELECT COUNT(ITEM_NUM)
		FROM ITEM I
        JOIN 
	        CATEGORY C
	        ON I.CATE_NUM = C.CATE_NUM
	           <if test="cate_num !=  null">
	           WHERE C.CATE_NUM  =  #{cate_num}
	          </if>
		ORDER BY ITEM_NUM DESC
	</select>

	<!-- 좋아요 등록 -->
	<insert id="setLikeAdd" parameterType="ItemLikeDTO">
		INSERT INTO ITEMLIKE VALUES (LIKE_SEQ.NEXTVAL, #{item_num}, #{user_id})
	</insert>

	<!-- 좋아요 취소 -->
	<delete id="setLikeDelete" parameterType="ItemLikeDTO">
		DELETE ITEMLIKE WHERE ITEM_NUM=#{item_num} AND USER_ID=#{user_id}
	</delete>

	<!-- 회원당 해당 상품 좋아요 확인 -->
	<select id="getLikeUser" parameterType="ItemLikeDTO" resultType="ItemLikeDTO">
		SELECT * FROM ITEMLIKE WHERE ITEM_NUM=#{item_num} AND USER_ID=#{user_id}
	</select>

	<!-- 상품당 좋아요수 조회 -->
	<select id="getLikeItem" parameterType="ItemLikeDTO" resultType="Long">
		SELECT COUNT(ITEM_NUM) FROM ITEMLIKE WHERE ITEM_NUM=#{item_num}
	</select>


	<!-- 조회수 -->
	<update id="setHit" parameterType="ItemDTO">
		UPDATE ITEM SET ITEM_HIT=ITEM_HIT+1 WHERE ITEM_NUM=#{item_num}
	</update>


	<!-- 후기 조회 -->
	<select id="getReview" parameterType="Map" resultType="ItemReviewDTO">
		SELECT * FROM
		(SELECT ROWNUM RR, RRR.*
		FROM
		(SELECT R.*, MF.FILENAME
		FROM REVIEW R
		LEFT JOIN MEMBERFILE MF
		ON R.USER_ID = MF.USER_ID
		WHERE ITEM_NUM=#{item_num}
		ORDER BY RV_NUM DESC) RRR)
		WHERE RR BETWEEN #{startRow} AND #{lastRow}
	</select>

	<!-- 후기 등록 -->
	<insert id="setReviewAdd" parameterType="ItemReviewDTO">
		INSERT INTO REVIEW VALUES (REVIEW_SEQ.NEXTVAL, #{item_num}, #{user_id}, #{rv_title}, #{rv_contents}, SYSDATE, #{rv_star})
	</insert>

	<!-- 후기 삭제 -->
	<delete id="setReviewDelete" parameterType="ItemReviewDTO">
		DELETE REVIEW WHERE RV_NUM=#{rv_num} AND USER_ID=#{user_id}
	</delete>

	<!-- 후기 수정 -->
	<update id="setReviewUpdate" parameterType="ItemReviewDTO">
		UPDATE REVIEW SET RV_TITLE=#{rv_title,} RV_CONTENTS=#{rv_contents}, RV_STAR=#{rv_star})
	</update>
	
	<!-- 후기수 -->
	<select id="getReviewCount" parameterType="ItemReviewDTO" resultType="Long">
		SELECT COUNT(RV_NUM) FROM REVIEW WHERE ITEM_NUM=#{item_num}
	</select>
	
</mapper>